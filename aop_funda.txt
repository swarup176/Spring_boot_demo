Aspect

This is a module which has a set of APIs providing cross-cutting requirements. For example, a logging module would be called AOP
aspect for logging. An application can have any number of aspects depending on the requirement.

Join point

This represents a point in your application where you can plug-in the AOP aspect. You can also say, it is the actual place in the
application where an action will be taken using Spring AOP framework.

Advice

This is the actual action to be taken either before or after the method execution. This is an actual piece of code that is invoked during
the program execution by Spring AOP framework.

Pointcut

This is a set of one or more join points where an advice should be executed. You can specify pointcuts using expressions or patterns as we
will see in our AOP examples.

Introduction

An introduction allows you to add new methods or attributes to the existing classes.


Target object

The object being advised by one or more aspects. This object will always be a proxied object, also referred to as the advised object.

7
Weaving

Weaving is the process of linking aspects with other application types or objects to create an advised object. This can be done at compile time, load time, or at runtime.
